job: script

  include:livescript(bare=true) NativeError.ls
  include:livescript(bare=true) NativeType.ls
  include:livescript(bare=true) NativeArray.ls
  include:livescript(bare=true) NativeString.ls
  include:livescript(bare=true) NativeObject.ls

  include:livescript(bare=true) Args.ls
  include:livescript(bare=true) IO.ls
  include:livescript(bare=true) ComObject.ls
  include:livescript(bare=true) FileSystem.ls
  include:livescript(bare=true) TextFile.ls
  include:livescript(bare=true) ObjectFile.ls
  include:livescript(bare=true) Script.ls

  include:livescript(bare=true) Pug.ls
  include:livescript(bare=true) Livescript.ls
  include:livescript(bare=true) Jsc.ls

  include:livescript(bare=true) ScriptParser.ls
  include:livescript(bare=true) ConfigurationNamespaceResolutionStrategy.ls
  include:livescript(bare=true) FileSystemNamespaceResolutionStrategy.ls
  include:livescript(bare=true) NamespacePathResolver.ls
  include:livescript(bare=true) DependencyBuilder.ls
  include:livescript(bare=true) DependencyManager.ls
  include:livescript(bare=true) DependenciesComposer.ls
  include:livescript(bare=true) ScriptComposer.ls

  :livescript(bare=true)

    { argv } = Args
    { stdout } = IO
    { string-as-lines, lf, trim } = NativeString
    { each-array-item } = NativeArray

    { main-script-content } = Jsc
    { pug-livescript-prefix } = Pug
    { parse-script-lines } = ScriptParser
    { compose-main-script-source } = ScriptComposer
    { compose-dependencies-source } = DependenciesComposer

    argv |> main-script-content |> string-as-lines |> parse-script-lines

      |> ({ dependencies-references, livescript-lines }) ->

        [ pug-livescript-prefix ]

          |> (++ compose-dependencies-source dependencies-references)
          |> (++ compose-main-script-source argv.0, dependencies-references, livescript-lines)

      |> each-array-item _ , -> stdout lf, it
